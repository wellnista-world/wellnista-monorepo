'use client';

import { useState } from 'react';
import { supabase } from '../lib/api/supabaseClient';

import StdTextField from '../components/std/StdTextField';
import MultipleSelectCheckmarks from '../components/util/SelectChecker';
import StdSelect from '../components/std/StdSelect';

interface UserData {
  name: string;
  nickname: string;
  diseases: string[];
  madicines: string;
  gender: string;
  age: number;
  weight: number;
  height: number;
  activityLevel: string;
}

const genderName: string[] = ['‡∏ä‡∏≤‡∏¢', '‡∏´‡∏ç‡∏¥‡∏á'];
const activitiveLevel: string[] = [
  '‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢/‡∏ô‡∏±‡πà‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà',
  '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢ 1-3‡∏ß‡∏±‡∏ô/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå',
  '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á 4-5‡∏ß‡∏±‡∏ô/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå',
  '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏´‡∏ô‡∏±‡∏Å 6-7‡∏ß‡∏±‡∏ô/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå',
  '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏´‡∏ô‡∏±‡∏Å‡∏°‡∏≤‡∏Å 2 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á/‡∏ß‡∏±‡∏ô ‡πÄ‡∏õ‡πá‡∏ô‡∏ô‡∏±‡∏Å‡∏Å‡∏µ‡∏¨‡∏≤',
];
const diseaseNames  = [
  '‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô',
  '‡πÑ‡∏ï',
  '‡∏´‡∏±‡∏ß‡πÉ‡∏à',
  '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô',
  '‡πÄ‡∏Å‡πä‡∏≤‡∏ï‡πå',
  '‡πÑ‡∏Ç‡∏°‡∏±‡∏ô',
  
];

export default function Register() {
  const [userData, setUserData] = useState<UserData>({
    name: '',
    nickname: '',
    diseases: [],
    madicines: '',
    gender: '',
    age: 0,
    weight: 0,
    height: 0,
    activityLevel: '',
  });

const handleInputChange = (field: keyof UserData, value: string | number) => {
    setUserData((prev) => ({
      ...prev,
      [field]: value,
    }));
  };

  const handleDiseaseChangeValue = (values: string[]) => {
    setUserData((prev) => ({
      ...prev,
      diseases: values,
    }));
  };

  const handleSubmit = async () => {
    const {
      data: { user },
      error: userError,
    } = await supabase.auth.getUser();
  
    if (userError || !user) {
      alert('‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö');
      return;
    }
  
    const { data, error } = await supabase.from('users').insert([
      {
        ...userData,
        user_id: user.id, // üëà ‡∏ú‡∏π‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà login ‡∏≠‡∏¢‡∏π‡πà
      },
    ]);
  
    if (error) {
      console.error('Error inserting data:', error);
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô');
    } else {
      alert('‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
      console.log('User inserted:', data);
    }
  };

  return (
    <div className="grid grid-cols-6 gap-4 md:place-content-center bg-secondary text-neutral font-garet p-6">
      <div className="col-span-6 text-center text-3xl font-magnolia text-primary">‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</div>

      <div className="col-span-4 text-2xl font-bold text-neutral">‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</div>
      <div className="col-span-6 text-center">
        <StdTextField type="text" onChange={(e) => handleInputChange('name', e)} />
      </div>

      <div className="col-span-4 text-2xl font-bold text-neutral">‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô</div>
      <div className="col-span-6 text-center">
        <StdTextField type="text" onChange={(e) => handleInputChange('nickname', e)} />
      </div>

      <div className="col-span-6 text-2xl font-bold text-neutral">‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1)</div>
      <div className="col-span-6 text-left">
        <MultipleSelectCheckmarks names={diseaseNames} onChangeValue={handleDiseaseChangeValue} />
      </div>

      <div className="col-span-4 text-2xl font-bold text-neutral">‡∏¢‡∏≤‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß</div>
      <div className="col-span-6 text-center">
        <StdTextField type="text" onChange={(e) => handleInputChange('madicines', e)} />
      </div>

      <div className="col-span-6 text-2xl font-bold text-neutral">‡πÄ‡∏û‡∏®</div>
      <div className="col-span-6 text-center">
        <StdSelect names={genderName} onChangeValue={(val) => handleInputChange('gender', val)} />
      </div>

      <div className="col-span-4 text-2xl font-bold text-neutral">‡∏≠‡∏≤‡∏¢‡∏∏</div>
      <div className="col-span-6 text-center">
        <StdTextField
          type="number"
          onChange={(e) => handleInputChange('age', Number(e))}
        />
      </div>

      <div className="col-span-3 text-2xl font-bold text-neutral">‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å</div>
      <div className="col-span-3 text-2xl font-bold text-neutral">‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á</div>
      <div className="col-start-1 col-end-4 text-center">
        <StdTextField
          type="number"
          onChange={(e) => handleInputChange('weight', Number(e))}
        />
      </div>
      <div className="col-start-4 col-end-7 text-center">
        <StdTextField
          type="number"
          onChange={(e) => handleInputChange('height', Number(e))}
        />
      </div>

      <div className="col-span-4 text-2xl font-bold text-neutral">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°</div>
      <div className="col-span-6 text-center">
        <StdSelect
          names={activitiveLevel}
          onChangeValue={(val) => handleInputChange('activityLevel', val)}
        />
      </div>

      <button
        onClick={handleSubmit}
        className="mt-10 py-3 col-start-2 col-end-6 bg-primary text-center text-xl text-secondary font-bold rounded-md transition hover:bg-accent"
      >
        ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
      </button>
    </div>
  );
}
